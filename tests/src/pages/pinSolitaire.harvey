<function pinSolitaire <body

    <letsmake <split rowOne setRowOne> <useHookArray <array <null> <null> <true> <true> <true> <null> <null>>>>
    <letsmake <split rowTwo setRowTwo> <useHookArray <array <null> <null> <true> <true> <true> <null> <null>>>>
    <letsmake <split rowThree setRowThree> <useHookArray <array <true> <true> <true> <true> <true> <true> <true>>>>
    <letsmake <split rowFour setRowFour> <useHookArray <array <true> <true> <true> <false> <true> <true> <true>>>>
    <letsmake <split rowFive setRowFive> <useHookArray <array <true> <true> <true> <true> <true> <true> <true>>>>
    <letsmake <split rowSix setRowSix> <useHookArray <array <null> <null> <true> <true> <true> <null> <null>>>>
    <letsmake <split rowSeven setRowSeven> <useHookArray <array <null> <null> <true> <true> <true> <null> <null>>>>

    <letsmake rows <array rowOne rowTwo rowThree rowFour rowFive rowSix rowSeven>>
    <letsmake updateRows <array setRowOne setRowTwo setRowThree setRowFour setRowFive setRowSix setRowSeven>>

    <letsmake <split moves setMoves> <useHook <string "no">>>

    <function CarryOutMove from to <body
        <letsmake startX <subtract from.x 2>>
        <letsmake startY <subtract from.y 2>>

        <letsmake endX <subtract to.x 2>>
        <letsmake endY <subtract to.y 2>>

        <letsmake addOne <add startX endX>>
        <letsmake addTwo <add startY endY>>

        <letsmake middleX <divide addOne 2>>
        <letsmake middleY <divide addTwo 2>>


        <call <itterate updateRows startX> <false> startY>
        <call <itterate updateRows endX> <true> endY>
        <call <itterate updateRows middleX> <false> middleY>
    >>


    <function sortOut <body


        <letsmake inputIn <call JSON.parse moves.aInternal>>
        <letsmake itt 0>
        <interval <Arrowfunc <body
            <if <equal itt inputIn.length> <body
                <return>
            >>
            <letsmake newerItem <itterate inputIn itt>>
            <call CarryOutMove newerItem.location newerItem.to>
            <assign itt <add itt 1>>
        >> 1000>
      
    >>


    <render <string "body">
        <a <string "Home"> <string "Link"> <string "/">>

        <hOne <string "Welcome to pin solitaire!"> <string "Welcome">>
        
        <p <CallRemoteFunc test <string "loading"> <string "data from client!">>>

        <loop "i" rows.length 1 <body 
            <Component LoopItem rows i i>
        >>
        
        <input <empty> <string "none"> <string "text"> setMoves>
        <button <string "SendIt!"> <empty> <call sortOut>>
        <p moves> 

        <style <scss "
            .Welcome {
                color: #00a8ff;
            }
            .largeX {
                font-size: 40px;
            }
            .row {
                display: flex;
                flex-direction: row;
                justify-content: center;
                align-items: center;
                & > div {
                    height:70px;
                    width:70px;
                    display: flex;
                    flex-direction: row;
                    justify-content: center;
                    align-items: center;
                    background-color: #00a8ff;
                    border: 0.5px solid white;
                }
            }
            .list {
                button {
                    font-size:20px;
                    background-color: #2f3640;
                    cursor:pointer;
                    text-decoration: underline;
                    border: 0px solid;
                    color: #00a8ff;
                }
            }
        "> <empty>>
    >
>>


<ComponentFunc LoopItem mainParent rows i <body
    <letsmake CurrentRow <itterate rows i>>
    <render <var mainParent>
        <div <empty> <string "row">
        
            <loop "k" CurrentRow.length 1 <body
                
                <letsmake cell <itterate rows i k>>

        
                <if <notequal cell.aInternal <null>> <body
                    
                    <Component boardItem cell <add <string ""> i k>>
                    
                >>
            >>
        >
    >
>>

<RemoteFunc test data test newer better <body
    <send <add data <string " hiii">>>
>>